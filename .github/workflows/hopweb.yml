# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
---

name: Java CI with Maven

on:
  push:
    branches: [ web ]
  pull_request:
    branches: [ web ]

jobs:
  maven:
    name: Maven build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Cache local Maven repository
      uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: RAT Check
      run: mvn clean apache-rat:check
    - name: Build with Maven
      run: |
        # Test ui/ only as other packages are already tested in the upstream
        mvn -B clean install -DskipTests=true
        mvn -B clean test -pl ui
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - uses: marvinpinto/action-automatic-releases@latest
      if: github.ref == 'refs/heads/web'
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: "hopweb/nightly"
        prerelease: false
        title: "Auto-build of ${{ github.ref }} by GitHub Actions."
        files: |
          assemblies/web/target/hop.war
          assemblies/plugins/dist/target/hop-assemblies-plugins-dist-*.zip
          assemblies/client/target/hop-client-*.zip
    - uses: actions/upload-artifact@v2
      with:
        name: maven-artifact
        path: |
          assemblies/web/target/hop.war
          assemblies/plugins/dist/target/hop-assemblies-*.zip

  docker:
    name: Docker build
    needs: maven
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - uses: actions/download-artifact@v2
      with:
        name: maven-artifact
        path: artifacts
    - name: Unzip artifacts
      run: |
        unzip artifacts/web/target/hop.war -d assemblies/web/target/webapp
        unzip artifacts/plugins/dist/target/hop-assemblies-*.zip -d assemblies/plugins/dist/target/
    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: ./
        file: ./docker/Dockerfile.web
        push: true
        tags: hiromuhota/hopweb:nightly

  test:
    name: UI Testing
    needs: docker
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/web'
    services:
      hopweb:
        image: hiromuhota/hopweb:nightly
        ports:
        - 8080:8080
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: UI Testing
      run: mvn -B test
      working-directory: ./integration-tests/hopweb

