# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ web ]
  pull_request:
    branches: [ web ]

jobs:
  maven:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Cache local Maven repository
      uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Build with Maven
      run: mvn -B install
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - uses: actions/upload-artifact@v2
      with:
        name: my-artifact
        path: |
          assemblies/web/target/hop.war
          assemblies/plugins/dist/target/hop-assemblies-plugins-dist-*.zip

  docker:
    needs: maven
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - uses: actions/download-artifact@v2
      with:
        name: my-artifact
    - name: Check downloaded artifacts
      run: ls -la
    - name: Move artifacts
      run: |
        mv assemblies/web/target/hop.war docker/
        mv assemblies/plugins/dist/target/hop-assemblies-plugins-dist-*.zip docker/hop-assemblies-plugins-dist.zip
    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: ./docker
        file: ./docker/Dockerfile
        push: true
        tags: hiromuhota/hopweb:nightly

